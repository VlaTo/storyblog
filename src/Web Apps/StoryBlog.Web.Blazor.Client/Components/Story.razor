@page "/Story/{Slug}"

@using global::Blazor.Fluxor
@using StoryBlog.Web.Blazor.Client.Store
@using StoryBlog.Web.Blazor.Client.Store.Actions
@using StoryBlog.Web.Services.Blog.Interop.Includes
@using StoryBlog.Web.Services.Shared.Common

@inherits global::Blazor.Fluxor.Components.FluxorComponent

@inject IState<StoryState> StoryState
@inject IState<UserState> TheUser
@inject IDispatcher Dispatcher
@inject IPluralLocalizer Pluralizer

@if (null == StoryState)
{

}
else if (StoryState.Value.IsNone())
{
    <p class="text-muted">Loading...</p>
}
else
{
    //var story = StoryState.Value.Story;
    //var user = TheUser.Value.Principal ?? null;

    <section>
        <div class="container">
            <div class="row">
                <div class="col-lg-9">
                    @if (StoryState.Value.IsFailed())
                    {
                        <p>@StoryState.Value.Status.Error</p>
                    }

                    @if (StoryState.Value.IsSuccess())
                    {
                        var story = StoryState.Value.Story;

                        <article id="@story.Slug" class="">
                            <div class="mb-5">
                                <h2 class="">@story.Title</h2>
                                <ul class="list-unstyled list-inline">
                                    <li class="list-inline-item">
                                        <i class="mdi mdi-calendar"></i>
                                        <TimeLabel DateTime=@story.Published />
                                    </li>
                                    <li class="list-inline-item">
                                        <i class="mdi mdi-comment-multiple-outline"></i>
                                        @story.Comments.Count @Pluralizer["комментарий", story.Comments.Count]
                                    </li>
                                </ul>

                                <div class="justify-content-md-start">@story.Content</div>

                                @if (false == story.Comments.Any())
                                {
                                    <div class="alert alert-secondary" role="alert">
                                        <h4>No comments yet</h4>
                                    </div>
                                }

                                <div class="">
                                    <form id="new-id" name="new-id" novalidate>
                                        <button type="button" onclick=OnSubmitButtonClick></button>
                                    </form>
                                    <textarea></textarea>
                                </div>

                                @if (story.Comments.Any())
                                {
                                    <div class="m-lg-2">
                                        <ul class="list-unstyled">
                                            <CommentsBlock Comments=@story.Comments />
                                        </ul>
                                    </div>
                                }
                            </div>
                        </article>
                    }
                </div>
                <aside class="col-lg-3">
                    <StoryBlogAboutAuthor />
                </aside>
            </div>
        </div>
    </section>
}

@code
{

    [Parameter]
    protected string Slug
    {
        get;
        set;
    }

    protected override void OnParametersSet()
    {
        const StoryFlags includes = StoryFlags.Authors | StoryFlags.Comments;
        Dispatcher.Dispatch(new GetStoryAction(Slug, includes));
    }

    private void OnSubmitButtonClick(UIMouseEvent e)
    {

    }
}