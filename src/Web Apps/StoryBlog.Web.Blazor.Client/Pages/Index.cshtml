@page "/"

@using global::Blazor.Fluxor
@using StoryBlog.Web.Blazor.Client.Store

@inherits global::Blazor.Fluxor.Components.FluxorComponent

@inject IState<StoriesState> State
@inject IDispatcher Dispatcher

<div class="row">
    @if (State.Value.Status.IsLoading())
    {
        <div class="container storyblog-loading">
            <div class="row h-100 align-items-center">
                <div class="col-12 justify-content-center text-center">
                    <i class="mdi mdi-loading mdi-spin mdi-48px"></i>
                </div>
            </div>
        </div>
    }
    else
    {
        if (State.Value.Status.IsFailed())
        {

        }
        else if(State.Value.Status.IsNone())
        {

        }
        else
        {
            <section class="col-8">
            </section>
            <aside class="col-4">
            </aside>
        }
    }
</div>

@*if (null == State)
{

}
else if (State.Value.IsBusy)
{
    <div class="container storyblog-loading">
        <div class="row h-100 align-items-center">
            <div class="col-12 justify-content-center text-center">
                <i class="mdi mdi-loading mdi-spin mdi-48px"></i>
            </div>
        </div>
    </div>
}
else
{
    if (null != State.Value.Error)
    {
        <p>@State.Value.Error</p>
    }

    if (null != State.Value.Model)
    {
        <section>
            <div class="container">
                <div class="row">
                    <div class="col-md-12 mt-4 mb-5 storyblog-landing-title">
                        <h3 class="mb-2">@State.Value.Model.Title</h3>
                        <text class="text-muted">@State.Value.Model.Description</text>
                    </div>
                </div>
            </div>
        </section>

        <section>
            <div class="container">
                <div class="row">
                    <div class="col-lg-9">
                        <StoryBlogHeroStory Story=@State.Value.Model.Hero />
                        <StoryBlogFeaturedStories Stories=@State.Value.Model.Featured />
                    </div>
                    <aside class="col-lg-3">
                        <StoryBlogAboutAuthor />
                    </aside>
                </div>
            </div>
        </section>
    }
    else
    {
        <p>Empty Content</p>
    }
}*@

@functions
{
    protected override async Task OnInitAsync()
    {
        await base.OnInitAsync();
        //Dispatcher.Dispatch(new GetStoriesAction(StoryIncludes.Authors | StoryIncludes.Comments));
    }
}