@page "/fetchdata"
@using global::Blazor.Fluxor
@using StoryBlog.Web.Blazor.Client.Store
@using StoryBlog.Web.Blazor.Client.Store.Actions
@using StoryBlog.Web.Services.Blog.Common.Models
@inherits global::Blazor.Fluxor.Components.FluxorComponent
@inject IState<BlogState> BlogState
@inject IDispatcher Dispatcher

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (BlogState.Value.IsBusy)
{
    <p><em>Loading...</em></p>
}
else
{
    if (null != BlogState.Value.Error)
    {
        <p>@BlogState.Value.Error</p>
    }
    else if (null != BlogState.Value.Stories)
    {
        <table class="table">
            <thead>
            <tr>
                <th>Date</th>
                <th>@nameof(StoryModel.Title)</th>
                <th>@nameof(StoryModel.Content)</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var story in BlogState.Value.Stories)
            {
                <tr>
                    <td>@story.Created.ToShortDateString()</td>
                    <td>@story.Title</td>
                    <td>@story.Content</td>
                </tr>
            }
            </tbody>
        </table>
    }
}

@functions {

    protected override async Task OnInitAsync()
    {
        await base.OnInitAsync();
        Dispatcher.Dispatch(new GetStoriesListAction());
    }

}