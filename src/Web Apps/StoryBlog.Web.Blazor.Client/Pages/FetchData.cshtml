@page "/fetchdata"

@using System.IO
@using System.Text
@using Newtonsoft.Json

@inherits Microsoft.AspNetCore.Components.ComponentBase

@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@functions {
    WeatherForecast[] forecasts;

    protected override async Task OnInitAsync()
    {
        using (var response = await Http.GetAsync(new Uri("api/SampleData/WeatherForecasts", UriKind.Relative)))
        {
            if (false == response.IsSuccessStatusCode)
            {
                return;
            }

            var stream = await response.Content.ReadAsStreamAsync();

            using (var streamReader = new StreamReader(stream, Encoding.UTF8))
            {
                var serializer = new JsonSerializer();

                using (var reader = new JsonTextReader(streamReader))
                {
                    forecasts = serializer.Deserialize<WeatherForecast[]>(reader);
                }
            }
        }
    }

    internal sealed class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

}