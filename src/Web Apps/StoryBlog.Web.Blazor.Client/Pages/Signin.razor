@page "/signin"

@using global::Blazor.Fluxor
@using StoryBlog.Web.Client.Store
@using StoryBlog.Web.Client.Components
@using StoryBlog.Web.Client.Store.Actions

@inject IState<UserState> State
@inject IDispatcher Dispatcher 

<div class="col-auto">
    <BootstrapButton Type="@BootstrapButtonTypes.Primary" Outline="true" Size="@BootstrapButtonSizes.Small" OnClick="@OnSigninButtonClick">
        <i class="mdi mdi-account-arrow-right"></i>
        Sign in
    </BootstrapButton>
</div>

@functions
{

    private void OnSigninButtonClick(EventArgs e)
    {
        Dispatcher.Dispatch(new SigninRequestAction());

        /*var disco = await Http.GetDiscoveryDocumentAsync("http://localhost:3100");
        var crypto = new CryptoHelper();
        var pkce = crypto.CreatePkceData();
        var scopes = String.Join(" ", OidcConstants.StandardScopes.OpenId, OidcConstants.StandardScopes.Profile, "api.blog");
        var ur = new RequestUrl(disco.AuthorizeEndpoint);
        var auth = ur.CreateAuthorizeUrl(
            "client.application",
            OidcConstants.ResponseTypes.Code,
            scopes,
            "http://localhost:62742/callback",
            state: pkce.CodeVerifier,
            responseMode: OidcConstants.ResponseModes.Query,
            codeChallenge: pkce.CodeChallenge,
            codeChallengeMethod: OidcConstants.CodeChallengeMethods.Sha256);
        Uri.NavigateTo(auth);*/
    }

}
