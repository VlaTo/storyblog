@page "/stories"

@using global::Blazor.Fluxor
@using StoryBlog.Web.Blazor.Client.Store
@using StoryBlog.Web.Blazor.Client.Store.Actions
@using StoryBlog.Web.Services.Blog.Interop.Includes

@inherits global::Blazor.Fluxor.Components.FluxorComponent

@inject IState<StoriesState> State
@inject IDispatcher Dispatcher

@if (null == State)
{

}
else if (State.Value.Status.IsLoading())
{
    <p class="text-muted">Loading...</p>
}
else
{
    var model = State.Value;

    if (model.Status.IsFailed())
    {
        <p>@model.Status.Error</p>
    }

    if (false == model.Stories.Any())
    {
        <p>Empty content</p>
    }
    else
    {
        <div>
            @foreach (var story in model.Stories)
            {
                <BlogStory Story=@story />
            }
        </div>
    }
}

@functions
{
    protected override async Task OnInitAsync()
    {
        const StoryIncludes includes = StoryIncludes.Authors | StoryIncludes.Comments;

        await base.OnInitAsync();

        Dispatcher.Dispatch(new GetStoriesListAction(includes));
    }
}
