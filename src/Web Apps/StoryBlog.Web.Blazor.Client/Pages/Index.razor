@page "/"

@using global::Blazor.Fluxor
@using StoryBlog.Web.Client.Components
@using StoryBlog.Web.Client.Store
@using StoryBlog.Web.Client.Store.Actions
@using StoryBlog.Web.Services.Blog.Interop.Includes
@using StoryBlog.Web.Services.Shared.Common

@inherits global::Blazor.Fluxor.Components.FluxorComponent

@inject IState<StoriesState> State
@inject IDispatcher Dispatcher
@inject NavigationManager NavigationManager
@inject IPluralService Pluralizer
@inject IDateTimeLocalizer DateTimeLocalizer
@inject ITimeSpanLocalizer TimeSpanLocalizer

<div class="row">
    @if (State.Value.IsNone())
    {
        <p>None</p>
    }
    else if (State.Value.IsFailed())
    {
        <div class="alert alert-danger">
            <h5>@State.Value.Status.Error</h5>
        </div>
    }
    else
    {
        <section class="col-8">
            @foreach (var story in State.Value.Stories)
            {
                var linkSrc = "story/" + story.Slug;

                <article @key="story" id="@story.Slug" class="card storyblog-story">
                    <div class="card-header">
                        <ul class="card-subtitle text-muted list-unstyled list-inline">
                            <li class="list-inline-item">
                                <i class="mdi mdi-calendar"></i>
                                <TimeLabel DateTime="@story.Published" ConvertFallback="OnConvertTimeSpan" />
                            </li>
                            <li class="list-inline-item">
                                <i class="mdi mdi-account-outline"></i>
                                @story.Author.Name
                            </li>
                            <li class="list-inline-item">
                                <i class="mdi mdi-comment-multiple-outline"></i>
                                @story.CommentsCount @Pluralizer["Comment", story.CommentsCount]
                            </li>
                        </ul>
                    </div>
                    <div class=" card-body storyblog-story-header">
                        <h5 class="card-title storyblog-story-title">
                            <a href="@linkSrc">@story.Title</a>
                        </h5>
                        <div class="card-text mt-2">@story.Content</div>
                        <BootstrapButton 
                            Type="@BootstrapButtonTypes.Primary"
                            Size="@BootstrapButtonSizes.Small"
                            Outline=true
                            Class="mt-4"
                            OnClick=@(() => NavigationManager.NavigateTo(linkSrc))>
                            Читать полностью&nbsp;<i class="mdi mdi-arrow-right"></i>
                        </BootstrapButton>
                    </div>
                </article>
            }

            <div class="container mt-4">
                <div class="row justify-content-center">
                    <nav aria-label="pages">
                        <ul class="pagination">
                            <li class=@("page-item" + (null == State.Value.BackwardUri ? " disabled" : String.Empty))>
                                <a href="#" class="page-link" @onclick="@OnPreviousPageClick">Назад</a>
                            </li>

                            <li class=@("page-item" + (null == State.Value.ForwardUri ? " disabled" : String.Empty))>
                                <a href="#" class="page-link" @onclick="@OnNextPageClick">Вперед</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </section>

        <aside class="col-4 storyblog-aside">
            <div class="card storyblog-widget">
                <div class="card-body">
                    <h4 class="card-title">About Blog</h4>
                    <p class="card-text">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                        Pellentesque id tempus odio, quis tincidunt nisi.
                        In hac habitasse platea dictumst.
                        Cras rhoncus tincidunt egestas.
                        Vivamus rutrum maximus vulputate.
                        Praesent vestibulum justo vel cursus volutpat.
                        Phasellus vitae justo velit.
                    </p>
                </div>
            </div>
                
            <div class="card storyblog-widget">
                <div class="card-body">
                    <h4 class="card-title">Tags</h4>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Cras justo odio <span class="badge badge-pill badge-secondary">1</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Dapibus ac facilisis in <span class="badge badge-pill badge-secondary">3</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Vestibulum at eros <span class="badge badge-pill badge-secondary">9</span>
                        </li>
                    </ul>                
                </div>
            </div>
        </aside>
    }
</div>

@code
{
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new GetStoriesAction(StoryFlags.Authors | StoryFlags.Comments));
    }

    private void OnPreviousPageClick(MouseEventArgs e)
    {
        Dispatcher.Dispatch(new GetStoriesBackwardAction(State.Value.BackwardUri));
    }

    private void OnNextPageClick(MouseEventArgs e)
    {
        Dispatcher.Dispatch(new GetStoriesForwardAction(State.Value.ForwardUri));
    }

    private string OnConvertTimeSpan(TimeLabel label, TimeSpan span)
    {
        if (span < TimeSpan.FromDays(1.0d))
        {
            return TimeSpanLocalizer[TimeSpan.FromHours(span.TotalHours)];
        }

        //System.Diagnostics.Debug.WriteLine($"{System.Globalization.CultureInfo.CurrentUICulture.DisplayName}");

        return DateTimeLocalizer[label.DateTime];
    }
}