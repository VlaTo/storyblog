@page "/Story/{Slug}"

@using global::Blazor.Fluxor
@using StoryBlog.Web.Blazor.Client.Store
@using StoryBlog.Web.Blazor.Client.Store.Actions
@using StoryBlog.Web.Services.Blog.Interop.Includes

@inherits global::Blazor.Fluxor.Components.FluxorComponent

@inject IState<StoryState> State
@inject IDispatcher Dispatcher

@if (null == State)
{

}
else if (State.Value.Status.IsNone())
{
    <p class="text-muted">Loading...</p>
}
else
{
    if (null != State.Value.Status. Error)
    {
        <p>@State.Value.Status.Error</p>
    }

    var model = State.Value;

    if (null != model)
    {
        <article id="@model.Slug" class="">
            <div class="">
                <h2 class="">@model.Title</h2>
                <ul class="list-unstyled list-inline">
                    <li class="list-inline-item">
                        <i class="mdi mdi-calendar"></i>

                    </li>
                    <li class="list-inline-item">
                        <i class="mdi mdi-comment-multiple-outline"></i>

                    </li>
                </ul>
                <div class="justify-content-md-start">@model.Content</div>
            </div>
            <div>
                <ul class="list-unstyled">
                    @foreach (var comment in model.Comments)
                    {
                        <StoryBlogComment Comment=@comment />
                    }
                </ul>
            </div>
        </article>
    }
}

@functions
{
    [Parameter]
    protected string Slug { get; set; }

    protected override void OnParametersSet()
    {
        const StoryIncludes includes = StoryIncludes.Authors | StoryIncludes.Comments;
        Dispatcher.Dispatch(new GetStoryAction(Slug, includes));
    }
}